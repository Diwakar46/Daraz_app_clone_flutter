flutter pub run build_runner build --delete-conflicting-outputs 

-->  is used to run code generation tasks in your Flutter project, 
with the added precaution of deleting any conflicting outputs 
before generating new ones. This ensures that 
the generated code is up-to-date and consistent with your project's current state.


--> A binding essentially links your controller with the rest of your dependencies in the application

-->RxString is an observable string provided by GetX. 
Observables are special variables that can notify the UI whenever their values change. 
This allows you to automatically update the UI when the state changes without manually calling setState().

--> obx used in a changing widget and obs used for changing variables

-->  replaced StatefulWidget with GetView<HomeController>
    which is a simplified way of managing state using GetX.

--> Imagine you're building a house (your app), and the 
API data is like furniture you're bringing in. The model class is the instruction manual that
 tells you how to arrange and understand that furniture so your house looks neat and makes sense.


 --> push this app to gitHub
 .Create a new reposotries in gitHub
 come to terminal 
 -> git init
 -> git remote add origin <Shh url> or <https>
 -> git add .
 -> git commit -m " "
 -> git push - u origin master/main/or whatever your branch

after making changes in code
-> git add .
-> git commit -m "Description of changes made"
-> git push origin <branch-name>


tolist() method
--> final planets = <int, String>{1: 'Mercury', 2: 'Venus', 3: 'Mars'};
 final keysList = planets.keys.toList(growable: false); // [1, 2, 3]
 final valuesList =
    planets.values.toList(growable: false); // [Mercury, Venus, Mars]


